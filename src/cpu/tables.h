/* Generated by buildtables.py */

#define OPCODE_SWITCH_TABLE \
switch (opcode) { \
    case 0: imp(); brk(); break; \
    case 1: indx(); ora(); break; \
    case 2: imp(); nop(); break; \
    case 3: imp(); nop(); break; \
    case 4: zp(); tsb(); break; \
    case 5: zp(); ora(); break; \
    case 6: zp(); asl(); break; \
    case 7: zp(); rmb0(); break; \
    case 8: imp(); php(); break; \
    case 9: imm(); ora(); break; \
    case 10: acc(); asl(); break; \
    case 11: imp(); nop(); break; \
    case 12: abso(); tsb(); break; \
    case 13: abso(); ora(); break; \
    case 14: abso(); asl(); break; \
    case 15: zprel(); bbr0(); break; \
    case 16: rel(); bpl(); break; \
    case 17: indy(); ora(); break; \
    case 18: ind0(); ora(); break; \
    case 19: imp(); nop(); break; \
    case 20: zp(); trb(); break; \
    case 21: zpx(); ora(); break; \
    case 22: zpx(); asl(); break; \
    case 23: zp(); rmb1(); break; \
    case 24: imp(); clc(); break; \
    case 25: absy(); ora(); break; \
    case 26: acc(); inc(); break; \
    case 27: imp(); nop(); break; \
    case 28: abso(); trb(); break; \
    case 29: absx(); ora(); break; \
    case 30: absx(); asl(); break; \
    case 31: zprel(); bbr1(); break; \
    case 32: abso(); jsr(); break; \
    case 33: indx(); and(); break; \
    case 34: imp(); nop(); break; \
    case 35: imp(); nop(); break; \
    case 36: zp(); bit(); break; \
    case 37: zp(); and(); break; \
    case 38: zp(); rol(); break; \
    case 39: zp(); rmb2(); break; \
    case 40: imp(); plp(); break; \
    case 41: imm(); and(); break; \
    case 42: acc(); rol(); break; \
    case 43: imp(); nop(); break; \
    case 44: abso(); bit(); break; \
    case 45: abso(); and(); break; \
    case 46: abso(); rol(); break; \
    case 47: zprel(); bbr2(); break; \
    case 48: rel(); bmi(); break; \
    case 49: indy(); and(); break; \
    case 50: ind0(); and(); break; \
    case 51: imp(); nop(); break; \
    case 52: zpx(); bit(); break; \
    case 53: zpx(); and(); break; \
    case 54: zpx(); rol(); break; \
    case 55: zp(); rmb3(); break; \
    case 56: imp(); sec(); break; \
    case 57: absy(); and(); break; \
    case 58: acc(); dec(); break; \
    case 59: imp(); nop(); break; \
    case 60: absx(); bit(); break; \
    case 61: absx(); and(); break; \
    case 62: absx(); rol(); break; \
    case 63: zprel(); bbr3(); break; \
    case 64: imp(); rti(); break; \
    case 65: indx(); eor(); break; \
    case 66: imp(); nop(); break; \
    case 67: imp(); nop(); break; \
    case 68: imp(); nop(); break; \
    case 69: zp(); eor(); break; \
    case 70: zp(); lsr(); break; \
    case 71: zp(); rmb4(); break; \
    case 72: imp(); pha(); break; \
    case 73: imm(); eor(); break; \
    case 74: acc(); lsr(); break; \
    case 75: imp(); nop(); break; \
    case 76: abso(); jmp(); break; \
    case 77: abso(); eor(); break; \
    case 78: abso(); lsr(); break; \
    case 79: zprel(); bbr4(); break; \
    case 80: rel(); bvc(); break; \
    case 81: indy(); eor(); break; \
    case 82: ind0(); eor(); break; \
    case 83: imp(); nop(); break; \
    case 84: imp(); nop(); break; \
    case 85: zpx(); eor(); break; \
    case 86: zpx(); lsr(); break; \
    case 87: zp(); rmb5(); break; \
    case 88: imp(); cli(); break; \
    case 89: absy(); eor(); break; \
    case 90: imp(); phy(); break; \
    case 91: imp(); nop(); break; \
    case 92: imp(); nop(); break; \
    case 93: absx(); eor(); break; \
    case 94: absx(); lsr(); break; \
    case 95: zprel(); bbr5(); break; \
    case 96: imp(); rts(); break; \
    case 97: indx(); adc(); break; \
    case 98: imp(); nop(); break; \
    case 99: imp(); nop(); break; \
    case 100: zp(); stz(); break; \
    case 101: zp(); adc(); break; \
    case 102: zp(); ror(); break; \
    case 103: zp(); rmb6(); break; \
    case 104: imp(); pla(); break; \
    case 105: imm(); adc(); break; \
    case 106: acc(); ror(); break; \
    case 107: imp(); nop(); break; \
    case 108: ind(); jmp(); break; \
    case 109: abso(); adc(); break; \
    case 110: abso(); ror(); break; \
    case 111: zprel(); bbr6(); break; \
    case 112: rel(); bvs(); break; \
    case 113: indy(); adc(); break; \
    case 114: ind0(); adc(); break; \
    case 115: imp(); nop(); break; \
    case 116: zpx(); stz(); break; \
    case 117: zpx(); adc(); break; \
    case 118: zpx(); ror(); break; \
    case 119: zp(); rmb7(); break; \
    case 120: imp(); sei(); break; \
    case 121: absy(); adc(); break; \
    case 122: imp(); ply(); break; \
    case 123: imp(); nop(); break; \
    case 124: ainx(); jmp(); break; \
    case 125: absx(); adc(); break; \
    case 126: absx(); ror(); break; \
    case 127: zprel(); bbr7(); break; \
    case 128: rel(); bra(); break; \
    case 129: indx(); sta(); break; \
    case 130: imp(); nop(); break; \
    case 131: imp(); nop(); break; \
    case 132: zp(); sty(); break; \
    case 133: zp(); sta(); break; \
    case 134: zp(); stx(); break; \
    case 135: zp(); smb0(); break; \
    case 136: imp(); dey(); break; \
    case 137: imm(); bit(); break; \
    case 138: imp(); txa(); break; \
    case 139: imp(); nop(); break; \
    case 140: abso(); sty(); break; \
    case 141: abso(); sta(); break; \
    case 142: abso(); stx(); break; \
    case 143: zprel(); bbs0(); break; \
    case 144: rel(); bcc(); break; \
    case 145: indy(); sta(); break; \
    case 146: ind0(); sta(); break; \
    case 147: imp(); nop(); break; \
    case 148: zpx(); sty(); break; \
    case 149: zpx(); sta(); break; \
    case 150: zpy(); stx(); break; \
    case 151: zp(); smb1(); break; \
    case 152: imp(); tya(); break; \
    case 153: absy(); sta(); break; \
    case 154: imp(); txs(); break; \
    case 155: imp(); nop(); break; \
    case 156: abso(); stz(); break; \
    case 157: absx(); sta(); break; \
    case 158: absx(); stz(); break; \
    case 159: zprel(); bbs1(); break; \
    case 160: imm(); ldy(); break; \
    case 161: indx(); lda(); break; \
    case 162: imm(); ldx(); break; \
    case 163: imp(); nop(); break; \
    case 164: zp(); ldy(); break; \
    case 165: zp(); lda(); break; \
    case 166: zp(); ldx(); break; \
    case 167: zp(); smb2(); break; \
    case 168: imp(); tay(); break; \
    case 169: imm(); lda(); break; \
    case 170: imp(); tax(); break; \
    case 171: imp(); nop(); break; \
    case 172: abso(); ldy(); break; \
    case 173: abso(); lda(); break; \
    case 174: abso(); ldx(); break; \
    case 175: zprel(); bbs2(); break; \
    case 176: rel(); bcs(); break; \
    case 177: indy(); lda(); break; \
    case 178: ind0(); lda(); break; \
    case 179: imp(); nop(); break; \
    case 180: zpx(); ldy(); break; \
    case 181: zpx(); lda(); break; \
    case 182: zpy(); ldx(); break; \
    case 183: zp(); smb3(); break; \
    case 184: imp(); clv(); break; \
    case 185: absy(); lda(); break; \
    case 186: imp(); tsx(); break; \
    case 187: imp(); nop(); break; \
    case 188: absx(); ldy(); break; \
    case 189: absx(); lda(); break; \
    case 190: absy(); ldx(); break; \
    case 191: zprel(); bbs3(); break; \
    case 192: imm(); cpy(); break; \
    case 193: indx(); cmp(); break; \
    case 194: imp(); nop(); break; \
    case 195: imp(); nop(); break; \
    case 196: zp(); cpy(); break; \
    case 197: zp(); cmp(); break; \
    case 198: zp(); dec(); break; \
    case 199: zp(); smb4(); break; \
    case 200: imp(); iny(); break; \
    case 201: imm(); cmp(); break; \
    case 202: imp(); dex(); break; \
    case 203: imp(); wai(); break; \
    case 204: abso(); cpy(); break; \
    case 205: abso(); cmp(); break; \
    case 206: abso(); dec(); break; \
    case 207: zprel(); bbs4(); break; \
    case 208: rel(); bne(); break; \
    case 209: indy(); cmp(); break; \
    case 210: ind0(); cmp(); break; \
    case 211: imp(); nop(); break; \
    case 212: imp(); nop(); break; \
    case 213: zpx(); cmp(); break; \
    case 214: zpx(); dec(); break; \
    case 215: zp(); smb5(); break; \
    case 216: imp(); cld(); break; \
    case 217: absy(); cmp(); break; \
    case 218: imp(); phx(); break; \
    case 219: imp(); dbg(); break; \
    case 220: imp(); nop(); break; \
    case 221: absx(); cmp(); break; \
    case 222: absx(); dec(); break; \
    case 223: zprel(); bbs5(); break; \
    case 224: imm(); cpx(); break; \
    case 225: indx(); sbc(); break; \
    case 226: imp(); nop(); break; \
    case 227: imp(); nop(); break; \
    case 228: zp(); cpx(); break; \
    case 229: zp(); sbc(); break; \
    case 230: zp(); inc(); break; \
    case 231: zp(); smb6(); break; \
    case 232: imp(); inx(); break; \
    case 233: imm(); sbc(); break; \
    case 234: imp(); nop(); break; \
    case 235: imp(); nop(); break; \
    case 236: abso(); cpx(); break; \
    case 237: abso(); sbc(); break; \
    case 238: abso(); inc(); break; \
    case 239: zprel(); bbs6(); break; \
    case 240: rel(); beq(); break; \
    case 241: indy(); sbc(); break; \
    case 242: ind0(); sbc(); break; \
    case 243: imp(); nop(); break; \
    case 244: imp(); nop(); break; \
    case 245: zpx(); sbc(); break; \
    case 246: zpx(); inc(); break; \
    case 247: zp(); smb7(); break; \
    case 248: imp(); sed(); break; \
    case 249: absy(); sbc(); break; \
    case 250: imp(); plx(); break; \
    case 251: imp(); nop(); break; \
    case 252: imp(); nop(); break; \
    case 253: absx(); sbc(); break; \
    case 254: absx(); inc(); break; \
    case 255: zprel(); bbs7(); break; \
}

static const uint8_t accumtable[256] = {
/*        |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  A  |  B  |  C  |  D  |  E  |  F  |     */
/* 0 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 0 */
/* 1 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 1 */
/* 2 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 2 */
/* 3 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 3 */
/* 4 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 4 */
/* 5 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* 5 */
/* 6 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0, /* 6 */
/* 7 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* 7 */
/* 8 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* 8 */
/* 9 */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* 9 */
/* A */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* A */
/* B */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* B */
/* C */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* C */
/* D */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* D */
/* E */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, /* E */
/* F */       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0  /* F */
};

static const uint32_t ticktable[256] = {
/*        |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  A  |  B  |  C  |  D  |  E  |  F  |     */
/* 0 */       7,    6,    2,    2,    5,    3,    5,    5,    3,    2,    2,    2,    6,    4,    6,    5, /* 0 */
/* 1 */       2,    5,    5,    2,    5,    4,    6,    5,    2,    4,    2,    2,    6,    4,    7,    5, /* 1 */
/* 2 */       6,    6,    2,    2,    3,    3,    5,    5,    4,    2,    2,    2,    4,    4,    6,    5, /* 2 */
/* 3 */       2,    5,    5,    2,    4,    4,    6,    5,    2,    4,    2,    2,    4,    4,    7,    5, /* 3 */
/* 4 */       6,    6,    2,    2,    2,    3,    5,    5,    3,    2,    2,    2,    3,    4,    6,    5, /* 4 */
/* 5 */       2,    5,    5,    2,    2,    4,    6,    5,    2,    4,    3,    2,    2,    4,    7,    5, /* 5 */
/* 6 */       6,    6,    2,    2,    3,    3,    5,    5,    4,    2,    2,    2,    5,    4,    6,    5, /* 6 */
/* 7 */       2,    5,    5,    2,    4,    4,    6,    5,    2,    4,    4,    2,    6,    4,    7,    5, /* 7 */
/* 8 */       3,    6,    2,    2,    3,    3,    3,    5,    2,    2,    2,    2,    4,    4,    4,    5, /* 8 */
/* 9 */       2,    6,    5,    2,    4,    4,    4,    5,    2,    5,    2,    2,    4,    5,    5,    5, /* 9 */
/* A */       2,    6,    2,    2,    3,    3,    3,    5,    2,    2,    2,    2,    4,    4,    4,    5, /* A */
/* B */       2,    5,    5,    2,    4,    4,    4,    5,    2,    4,    2,    2,    4,    4,    4,    5, /* B */
/* C */       2,    6,    2,    2,    3,    3,    5,    5,    2,    2,    2,    3,    4,    4,    6,    5, /* C */
/* D */       2,    5,    5,    2,    2,    4,    6,    5,    2,    4,    3,    1,    2,    4,    7,    5, /* D */
/* E */       2,    6,    2,    2,    3,    3,    5,    5,    2,    2,    2,    2,    4,    4,    6,    5, /* E */
/* F */       2,    5,    5,    2,    2,    4,    6,    5,    2,    4,    4,    2,    2,    4,    7,    5  /* F */
};
